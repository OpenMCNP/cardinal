#!python

# Path to the tutorials directory on your computer, if you want to run this script
directory = '/home/ajnovak2/cardinal/tutorials'

cubit.cmd("import step '" + directory + "/tokamak/iter05.step' heal no_names")

# simplify the CAD model for the sake of the tutorial, leaving only the first wall,
# multiplier, breeder, divertor, and vacuum vessel. These components are also
# represented as simple homogenized materials.
cubit.cmd("delete volume 2 3 4 5 6 7 8 9 10 11 12 13 15")
cubit.cmd("delete volume 1")

cubit.cmd("imprint volume all")
cubit.cmd("merge volume all")

# surface 144 and 155 are next to one another, but one of them is very narrow
# so Cubit will try to generate tiny elements by default. Here, we composite the
# two surfaces into a new virtual surface, keeping the geometry unchanged, so that
# meshing treats both surfaces as a single unit
cubit.cmd("composite create surface 144 155 keep angle 15")

# create material tags that we will use to assign to the volumes
cubit.cmd("create material 'pf' property_group 'CUBIT-ABAQUS'")
cubit.cmd("create material 'multiplier' property_group 'CUBIT-ABAQUS'")
cubit.cmd("create material 'breeder' property_group 'CUBIT-ABAQUS'")
cubit.cmd("create material 'ss316' property_group 'CUBIT-ABAQUS'")

# add the volumes to blocks and give them names
cubit.cmd("block 1 add volume 16")
cubit.cmd("block 1 name 'plasma_facing'")
cubit.cmd("block 2 add volume 17")
cubit.cmd("block 2 name 'multiplier'")
cubit.cmd("block 3 add volume 18")
cubit.cmd("block 3 name 'breeder'")
cubit.cmd("block 4 add volume 19")
cubit.cmd("block 4 name 'divertor'")
cubit.cmd("block 5 add volume 14")
cubit.cmd("block 5 name 'vacuum_vessel'")

# assign the material tags to the corresponding blocks
cubit.cmd("block 1 material 'pf'")
cubit.cmd("block 2 material 'multiplier'")
cubit.cmd("block 3 material 'breeder'")
cubit.cmd("block 4 material 'pf'")
cubit.cmd("block 5 material 'ss316'")

# add a sideset for the outer boundary of the vacuum vessel, which will be used for
# the heat transfer model
cubit.cmd("sideset 1 add surface 76")
cubit.cmd("sideset 1 name 'outside'")

cubit.cmd("volume all scheme tetmesh")
cubit.cmd("volume 14 16 17 18 19 size auto factor 5")
cubit.cmd("mesh volume 14 16 17 18 19")

# export a volume mesh for the heat transfer solver and for mapping data in Cardinal
cubit.cmd("export Genesis '" + directory + "/tokamak.e' dimension 3 overwrite")

# create a volume which exactly encloses the problem, so that we can assign select
# faces of that volume to have a reflecting boundary condition where the tokamak
# is sliced azimuthally
cubit.cmd("brick x 1005 y 1005 z 1140")
cubit.cmd("move volume 20 location 500 500 0 include_merged")
cubit.cmd("brick x 1050 y 1050 z 1180")
cubit.cmd("move volume 21 location 500 500 0 include_merged")
cubit.cmd("subtract body 20 from body 21")
cubit.cmd("block 8 add volume 22")
cubit.cmd("block 8 name 'vacuum'")
cubit.cmd("create material 'vacuum' property_group 'CUBIT-ABAQUS'")
cubit.cmd("block 8 material 'vacuum'")

# make the chopped-off parts of the tokamak reflecting for neutronics
cubit.cmd("sideset 9 add surface 181 182")
cubit.cmd("sideset 9 name 'boundary:Reflecting'")

# create a graveyard enclosing the domain to apply the vacuum boundary condition
# TODO: see if this can be consolidated with block 8
cubit.cmd("brick x 1500")
cubit.cmd("move volume 23 location 500 500 0 include_merged")
cubit.cmd("brick x 1600")
cubit.cmd("move volume 24 location 500 500 0 include_merged")
cubit.cmd("subtract body 22 from body 23")
cubit.cmd("block 9 add volume 25")
cubit.cmd("block 9 name 'graveyard'")
cubit.cmd("create material 'graveyard' property_group 'CUBIT-ABAQUS'")
cubit.cmd("block 9 material 'graveyard'")

# mesh the enclosing volumes using surface meshes
cubit.cmd("set trimesher coarse on ratio 100 angle 5")
cubit.cmd("surface all scheme trimesh")
cubit.cmd("volume 22 25 scheme tetmesh")
cubit.cmd("volume 22 25 size auto factor 10")
#mesh volume 22 25
